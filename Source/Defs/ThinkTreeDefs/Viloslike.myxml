#<?xml version="1.0" encoding="utf-8" ?>
Defs:

   ThinkTreeDef {
      defName: Viloslike
      thinkRoot[Class="ThinkNode_Priority"]/subNodes {

         // some things copied from the humanlike think tree
         
         //RW: If we HAVE to keep lying down...
         li[Class="ThinkNode_ConditionalMustKeepLyingDown"] {
            subNodes {

               //RW: Do a queued job if possible
               li[Class="ThinkNode_QueuedJob"]:
                  inBedOnly: true

               //RW: Get joy
               li[Class="ThinkNode_Tagger"] {
                  tagToGive: SatisfyingNeeds
                  subNodes {
                     li[Class="ThinkNode_PrioritySorter"]/subNodes:
                        li<ThinkNode_Priority_GetJoy>/subNodes:
                           [li Class="JobGiver_GetJoyInBed"]
                        [li Class="JobGiver_MeditateInBed"]
                  }
               } 

               //RW: Keep lying down
               [li Class="JobGiver_KeepLyingDown"]

            } 
         }


         li<ThinkNode_Subtree>:
            treeDef: Downed
         li<ThinkNode_Subtree>:
         // I don't think I need this one
            treeDef: BurningResponse
         li<ThinkNode_Subtree>:
            treeDef: MentalStateCritical

         //RW: Escaping threats
         li[Class="ThinkNode_Subtree" MayRequire="Ludeon.RimWorld.Biotech"]:
            treeDef: Abilities_Escape

         //RW: React to close melee threat
         [li Class="JobGiver_ReactToCloseMeleeThreat"]

         //RW: Mental state non critical
         li<ThinkNode_Subtree>:
            treeDef: MentalStateNonCritical

         
         //RW: Behavior when roped
         li<ThinkNode_Subtree>:
            treeDef: RopedPawn

         //RW: Insertion hook for modders
         li[Class="ThinkNode_SubtreesByTag"]:
            insertTag: Humanlike_PostMentalState

         //RW: Do a queued job
         [li Class="ThinkNode_QueuedJob"]

         //RW: Wait if drafted
         li[Class="ThinkNode_ConditionalColonist"]/subNodes {
            li[Class="ThinkNode_Tagger"] {
               tagToGive: DraftedOrder
               subNodes:
                  [li Class="JobGiver_MoveToStandable"]
                  [li Class="JobGiver_Orders"] 
            }
         }

         //RW: Self-tend if you're an NPC
         li[Class="ThinkNode_ConditionalNPCCanSelfTendNow"]/subNodes:
            [li Class="JobGiver_SelfTend"]

         // vilos don't have anything like land lords, so I'm not including this
         //RW: Lord directives

         // I don't know what vilos do with prisoners, or how they're supposed to behave.
         // I'll just copy what RimWorld does because it's part of the gameplay, how new colonists are aquired.
         //RW: Prisoner
         //BEGIN Prisoner
         li[Class="ThinkNode_ConditionalPrisoner"] {
            leaveJoinableLordIfIssuesJob: true
            subNodes {
               //RW: If it's the player home map...
               li[Class="ThinkNode_ConditionalInNonPlayerHomeMap"] {
                  invert: true
                  subNodes:
                     //RW: Wait instead of escaping if should
                     li[Class="ThinkNode_Tagger"]:
                        tagToGive: Idle
                        subNodes:
                           li[Class="JobGiver_PrisonerWaitInsteadOfEscaping"]:
                              maxDanger: Deadly
                     //RW: Escape
                     li[Class="ThinkNode_Tagger"]:
                        tagToGive: Escaping
                        subNodes:
                           [li Class="JobGiver_PrisonerEscape"]
               }

               //RW: Exit map if released
               li<ThinkNode_ConditionalReleased>/subNodes {
                  li<ThinkNode_Tagger>:
                     tagToGive: Misc
                     subNodes:
                        li<JobGiver_ExitMapBest>:
                           defaultLocomotion: Walk
               }

               li<ThinkNode_Tagger> {
                  tagToGive: RestingForMedicalReasons
                  subNodes:
                     <li JobGiver_PatientGoToBed>
               }

               li<ThinkNode_Tagger> {
                  tagToGive: ChangingApparel
                  subNodes:
                     <li JobGiver_PrisonerGetDressed>
               }

               li<ThinkNode_Tagger> {
                  tagToGive: SatisfyingNeeds
                  subNodes:
                     li<ThinkNode_PrioritySorter>/subNodes:
                        <li JobGiver_GetRest>
                        li<ThinkNode_Priority_GetJoy>/subNodes:
                           <li JobGiver_GetJoy>
                           <li JobGiver_GetJoyInBed>
               }

               //RW: If in non-PlayerHomeMap
               li<ThinkNode_ConditionalInNonPlayerHomeMap>/subNodes {
                  //RW: No colonist spawned in the map
                  li<ThinkNode_ConditionalAnyUndownedColonistSpawnedNearby> {
                     invert: true
                     subNodes:
                        li<ThinkNode_Tagger>:
                           tagToGive: Escaping
                           subNodes:
                              <li JobGiver_PrisonerEscape>
                  } 
                  //RW: Wander
                  li<ThinkNode_Tagger> {
                     tagToGive: Idle
                     subNodes:
                        li<JobGiver_WanderColony>:
                           maxDanger: Deadly

                  }
               }

               li<ThinkNode_Tagger> {
                  tagToGive: Idle
                  subNodes:
                     li<JobGiver_WanderCurrentRoom>:
                        maxDanger: Deadly
               }

               <li JobGiver_IdleError> 
            }
         }
         //END Prisoner

         //RW: If on Colonist team, do forced and emergency work
         //BEGIN emergency work
         li<ThinkNode_ConditionalColonist>/subNodes {
            //RW: Seek allowed area
            <li JobGiver_SeekAllowedArea>

            //RW: Seek safe temperatures
            <li JobGiver_BringBabyToSafety>
            <li JobGiver_SeekSafeTemperature>

            // do something when overheating

            //RW: Drop unused inventory
            <li JobGiver_DropUnusedInventory>

            //RW: Emergency work
            li<JobGiver_Work> {
               leaveJoinableLordIfIssuesJob: true
               emergency: true
            }

            //RW: Get food (only if starving)
            li<ThinkNode_ConditionalStarving>/subNodes {
               li<ThinkNode_Tagger>:
                  tagToGive: SatisfyingNeeds
                  subNodes:
                     li<JobGiver_GetFood>:
                        leaveJoinableLordIfIssuesJob: true
            }

            //RW: Breastfeed

            //RW: Lord directives (medium priority)

            // can I make this prefer vilos weapons?
            //RW: Pick up a weapon dropped while previously downed
            li<JobGiver_PickupDroppedWeapon> {
               ignoreForbidden: true
            }

            // vilos don't wear clothes, but they might carry exessories
            // for mechs, pieces of armor could count as clothes, idk.
            // oh! I could make Vilos swap out damaged scanners and antenna
            //RW: Optimize apparel
            li<ThinkNode_Tagger> {
               tagToGive: ChangingApparel
               subNodes:
                  // write the thing to replace this later
                  li<JobGiver_OptimizeApparel>:
                     leaveJoinableLordIfIssuesJob: true
            }
            
            // there are two things written for Idology here: look change and Dye hair.
            // Vilos sometimes decide to change their color pattern, so later I could figure out a way to implement that.

            //RW: Take for inventory stock
            li<ThinkNode_Tagger> {
               tagToGive: TakeForInventoryStock
               subNodes:
                  li<JobGiver_TakeForInventoryStock>:
                     leaveJoinableLordIfIssuesJob: true
            }

            //RW: Unload your inventory
            li<ThinkNode_Tagger> {
               tagToGive: UnloadingOwnInventory
               subNodes:
                  <li JobGiver_UnloadYourInventory>
            }

            // vilos don't need to eat, only sometimes refuel?
            //RW: Pack food if not hungry 
         }
         //END emergency work


         //RW: Behavior from traits
         <li ThinkNode_TraitBehaviors>

         // change to "Viloslike_PreMain" later
         //RW: Insertion hook for modders
         li<ThinkNode_SubtreesByTag> {
            insertTag: Humanlike_PreMain
         }

         // Main vilos colonist behavior core
         li<ThinkNode_ConditionalColonist>/subNodes {
            li<ThinkNode_Subtree>:
               treeDef: Viloslike_MainColonistBehaviorCore
               leaveJoinableLordIfIssuesJob: true
         }
         // todo: something here for transitioned vilos
         // they behave differently

         // Insertion hook for modders
         li<ThinkNode_SubtreesByTag> {
            insertTag: Humanlike_PostMain
         }

         // Idle colonist
         li<ThinkNode_ConditionalColonist>/subNodes {
            li<ThinkNode_Tagger>:
               tagToGive: Idle
               subNodes {
                  // Do random joy activity
                  li<ThinkNode_ConditionalNeedPercentageAbove> {
                     need: Joy
                     threshold: 0.9
                     invert: true
                     subNodes:
                        <li JobGiver_IdleJoy>
                  }

                  // Wander
                  li<JobGiver_WanderColony>:
                     maxDanger: None
               }
         }

         // so hurt hostile pawns son't use medical beds?
         //RW: If you're a neutral guest, if you're not hurt exit the map, otherwise use a medical bed
         li<ThinkNode_ConditionalGuest>/subNodes {
            li<ThinkNode_ConditionalNonPlayerNonHostileFactionOrFactionless>/subNodes {
               li<ThinkNode_Tagger>:
                  tagToGive: RestingForMedicalReasons
                  subNodes:
                     <li JobGiver_PatientGoToBed>

               li<ThinkNode_Tagger>:
                  tagToGive: Misc
                  subNodes:
                     li<JobGiver_ExitMapBest>:
                        defaultLocomotion: Walk 
            }
         }



         // RW: Final backup: If you're just here for no apparent reason, and not a colonist, leave the map
         //  e.g. This happens for pawns who are downed during combat, then later self-heal
         li<ThinkNode_ConditionalColonist> {
            invert: true
            subNodes:
               li<ThinkNode_Tagger>:
                  tagToGive: Misc
                  subNodes:
                     li<JobGiver_ExitMapBest>:
                        defaultLocomotion: Walk 
         }

         // RW: If you can't leave, just wander
         li<ThinkNode_Tagger> {
            tagToGive: Idle
            subNodes:
               li<JobGiver_WanderAnywhere>:
                  maxDanger: Deadly 
         }

         <li JobGiver_IdleError> 
      }
   }

   ThinkTreeDef {
      defName: ViloslikeConstant
      thinkRoot<ThinkNode_Priority>/subNodes {
         // Despawned
         li<ThinkNode_Subtree>:
            treeDef: Despawned

         li<ThinkNode_ConditionalCanDoConstantThinkTreeJobNow>/subNodes {
            // Flee explosion
            <li JobGiver_FleePotentialExplosion>

            // Join auto joinable caravan
            li<ThinkNode_Subtree>:
               treeDef: JoinAutoJoinableCaravan

            // Hostility response
            <li JobGiver_ConfigurableHostilityResponse>
         }

         li<ThinkNode_ConditionalCanDoLordJobNow>/subNodes {
            // Lord directives
            li<ThinkNode_Subtree>:
               treeDef: LordDutyConstant
         } 
      }
   }
